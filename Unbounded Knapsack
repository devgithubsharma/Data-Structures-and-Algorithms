# Knapsack with Duplicate Items
********************************************Problem*************************************
Given a set of N items, each with a weight and a value, represented by the array w[] and val[] respectively. Also, a knapsack with weight limit W.
The task is to fill the knapsack in such a way that we can get the maximum profit. Return the maximum profit.
Note: Each item can be taken any number of times.

Concept Used : - Unbounded Knapsack

********************************************CODE******************************************
def knapSack(self, N, W, val, wt):
        dp=[[-1 for i in range(W+1)] for j in range(N+1)]
        
        for i in range(N+1):
            for j in range(W+1):
                if i==0 or j==0:
                    dp[i][j]=0
                    
        for i in range(1,N+1):
            for j in range(1,W+1):
                if wt[i-1]<=j:
                    dp[i][j]=max(val[i-1]+dp[i][j-wt[i-1]],dp[i-1][j])
                    
                else:
                    dp[i][j]=dp[i-1][j]
                    
        return dp[N][W]

