# Graph Problem
# M-Coloring Problem

****************************************************PROBLEM*************************************************
Given an undirected graph and an integer M.
The task is to determine if the graph can be colored with at most M colors such that no two adjacent vertices of the graph are colored with the same color.
Here coloring of a graph means the assignment of colors to all vertices.
Print 1 if it is possible to colour vertices and 0 otherwise.

Concept : - Backtracking

*****************************************************CODE****************************************************
def isSafe(node,colorarr,graph,V,col):
    for i in range(V):
        if i!=node and graph[i][node]==1 and colorarr[i]==col:
            return False
            
    return True
def solve(node,colorarr,graph,V,k):
    if node==V:
        return True
        
    for i in range(1,k+1):
        if isSafe(node,colorarr,graph,V,i):
            colorarr[node]=i
            if solve(node+1,colorarr,graph,V,k):
                return True
            colorarr[node]=0
            
    return False
            
def graphColoring(graph, k, V):
    colorarr=[0]*V
    if solve(0,colorarr,graph,V,k)==True:
        return True
        
    return False
